{"version":3,"sources":["../../src/controller/topicResults.js"],"names":["config","db","api","post","req","res","newTopicResult","achieved","body","topic","id","subTopicResults","save","err","send","json","message","put","findById","params","topicresult","get","find","populate","path","model","exec","topicresults"],"mappings":";;;;;;AAAA;;;;AACA;;AAGA;;;;AACA;;;;AAGA;;;;kBAEe,gBAAkB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,aAAT,gCAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChD,YAAIC,iBAAiB,4BAArB;;AAEAA,uBAAeC,QAAf,GAA0BH,IAAII,IAAJ,CAASD,QAAnC;AACAD,uBAAeG,KAAf,GAAuBL,IAAII,IAAJ,CAASC,KAAhC;AACAH,uBAAeI,EAAf,GAAoBN,IAAII,IAAJ,CAASE,EAA7B;AACAJ,uBAAeK,eAAf,GAAiCP,IAAII,IAAJ,CAASG,eAA1C;;AAEAL,uBAAeM,IAAf,CAAoB,eAAO;AACvB,gBAAIC,GAAJ,EAAS;AACLR,oBAAIS,IAAJ,CAASD,GAAT;AACH;AACDR,gBAAIU,IAAJ,CAAS,EAACC,SAAS,oBAAV,EAAT;AACH,SALD;AAOH,KAfD;;AAiBA;AACAd,QAAIe,GAAJ,CAAQ,iBAAR,gCAAyC,UAACb,GAAD,EAAMC,GAAN,EAAc;AACnD,+BAAYa,QAAZ,CAAqBd,IAAIe,MAAJ,CAAWT,EAAhC,EAAoC,UAACG,GAAD,EAAMO,WAAN,EAAsB;;AAEtD,gBAAIP,GAAJ,EAAS;AACLR,oBAAIS,IAAJ,CAASD,GAAT;AACH;;AAEDO,wBAAYb,QAAZ,GAAuBH,IAAII,IAAJ,CAASD,QAAhC;AACAa,wBAAYX,KAAZ,GAAoBL,IAAII,IAAJ,CAASC,KAA7B;AACAW,wBAAYV,EAAZ,GAAiBN,IAAII,IAAJ,CAASE,EAA1B;AACAU,wBAAYT,eAAZ,GAA8BP,IAAII,IAAJ,CAASG,eAAvC;;AAEAS,wBAAYR,IAAZ,CAAiB,eAAO;AACpB,oBAAIC,GAAJ,EAAS;AACLR,wBAAIS,IAAJ,CAASD,GAAT;AACH;AACDR,oBAAIU,IAAJ,CAAS,EAACC,SAAS,eAAV,EAAT;AACH,aALD;AAMH,SAjBD;AAkBH,KAnBD;;AAqBA;AACAd,QAAImB,GAAJ,CAAQ,cAAR,gCAAsC,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChD,+BAAYiB,IAAZ,CAAiB,EAAEZ,IAAGN,IAAIe,MAAJ,CAAWT,EAAhB,EAAjB,EAAuC,UAACG,GAAD,EAAMO,WAAN,EAAsB;AACzD,gBAAIP,GAAJ,EAAS;AACLR,oBAAIS,IAAJ,CAASD,GAAT;AACH;AACDR,gBAAIU,IAAJ,CAASK,WAAT;AACH,SALD;AAMH,KAPD;;AASA;AACA;AACAlB,QAAImB,GAAJ,CAAQ,yBAAR,gCAAiD,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC3D,+BAAYiB,IAAZ,CAAiB,EAAEZ,IAAGN,IAAIe,MAAJ,CAAWT,EAAhB,EAAjB,EACKa,QADL,CACc,EAACC,MAAM,iBAAP,EAA0BC,OAAO,gBAAjC,EAAmDF,UAAU,EAACC,MAAM,UAAP,EAAmBC,OAAO,UAA1B,EAAsCF,UAAU,EAACC,MAAM,aAAP,EAAsBC,OAAO,OAA7B,EAAhD,EAA7D,EADd,EAEKF,QAFL,CAEc,IAFd,EAGKA,QAHL,CAGc,OAHd,EAIKA,QAJL,CAIc,UAJd,EAKKG,IALL,CAMI,UAACb,GAAD,EAAMc,YAAN,EAAuB;AACnB,gBAAId,GAAJ,EAAS;AACLR,oBAAIS,IAAJ,CAASD,GAAT;AACH;AACDR,gBAAIU,IAAJ,CAASY,YAAT;AACH,SAXL;AAaH,KAdD;;AAgBA,WAAOzB,GAAP;AACH,C;;AAED;AACA;AACA;AACA;;;AAhFA;;;AAJA","file":"topicResults.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\n\n//models\nimport Topic from '../model/topic';\nimport TopicResult from '../model/topicResults';\n\n//middleware\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default ({config, db}) => {\n    let api = Router();\n    \n    //Post a topic result\n    api.post('/postresult', authenticate, (req, res) => {\n        let newTopicResult = new TopicResult();\n\n        newTopicResult.achieved = req.body.achieved\n        newTopicResult.topic = req.body.topic\n        newTopicResult.id = req.body.id\n        newTopicResult.subTopicResults = req.body.subTopicResults\n\n        newTopicResult.save(err => {\n            if (err) {\n                res.send(err)\n            }\n            res.json({message: 'Topic result saved'})\n        })\n\n    });\n\n    //Update a topic - how is this handling the array?\n    api.put('/postresult/:id', authenticate, (req, res) => {\n        TopicResult.findById(req.params.id, (err, topicresult) => {\n            \n            if (err) {\n                res.send(err)\n            }\n\n            topicresult.achieved = req.body.achieved\n            topicresult.topic = req.body.topic\n            topicresult.id = req.body.id\n            topicresult.subTopicResults = req.body.subTopicResults\n\n            topicresult.save(err => {\n                if (err) {\n                    res.send(err)\n                }\n                res.json({message: \"Topic Updated\"})\n            })\n        });\n    });\n\n    //Get all results for a user\n    api.get('/getbyid/:id', authenticate, (req, res) => {\n        TopicResult.find({ id:req.params.id} , (err, topicresult) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(topicresult);\n        });\n    });\n\n    //Get all results and populate by ID - nested population\n    //https://stackoverflow.com/questions/28179720/mongoose-populate-nested-array\n    api.get('/getandpopulatebyid/:id', authenticate, (req, res) => {\n        TopicResult.find({ id:req.params.id })\n            .populate({path: 'subTopicResults', model: 'SubTopicResult', populate: {path: 'subtopic', model: 'SubTopic', populate: {path: 'parentTopic', model: 'Topic'}}})\n            .populate('id')\n            .populate('topic')\n            .populate('subtopic')\n            .exec(\n            (err, topicresults) => {\n                if (err) {\n                    res.send(err);\n                }\n                res.json(topicresults)\n            }\n        )\n    });\n\n    return api;\n};\n\n// .populate('subTopicResults')\n// .populate('id')\n// .populate('topic')\n// .populate('subtopic')"]}