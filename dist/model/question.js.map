{"version":3,"sources":["../../src/model/question.js"],"names":["Schema","questionSchema","question","type","String","required","correctAnswer","answers","schema","module","exports","model"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAIA,SAAS,mBAASA,MAAtB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAIC,iBAAiB,IAAID,MAAJ,CAAW;AAC5BE,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU;AAFJ,KADkB;AAK5BC,mBAAe;AACXH,cAAMC,MADK;AAEXC,kBAAU;AAFC,KALa;AAS5B;AACA;AACAE,aAAS,CAAC,iBAAOC,MAAR;AAXmB,CAAX,CAArB;;AAcAC,OAAOC,OAAP,GAAiB,mBAASC,KAAT,CAAe,UAAf,EAA2BV,cAA3B,CAAjB","file":"question.js","sourcesContent":["import mongoose from 'mongoose';\nimport Answer from './answer';\nlet Schema = mongoose.Schema;\n// var ObjectId = mongoose.Schema.Types.ObjectId\n\n//For embedded documents the embedded schema must be created in the same file.\n\n// let answerSchema = new Schema ({\n//     answer: String\n// });\n\nlet questionSchema = new Schema({\n    question: {\n        type: String,\n        required: true\n    },\n    correctAnswer: {\n        type: String,\n        required: true\n    },\n    //embed not relate\n    // answers: [{type: ObjectId, ref: 'Answer'}]\n    answers: [Answer.schema]\n});\n\nmodule.exports = mongoose.model('Question', questionSchema);"]}